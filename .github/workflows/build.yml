name: Build WebView APK (Release Build)

on:
  workflow_dispatch:
    inputs:
      site_url:
        required: true
        type: string
      app_name:
        required: true
        type: string
      logo_url:
        required: true
        type: string
      account_id:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 7.6

      - name: Decode keystore file from secret
        run: |
          mkdir -p webview-app/app/keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > webview-app/app/keystore/release-key.jks

      - name: Write gradle.properties with keystore info
        run: |
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> webview-app/app/gradle.properties
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> webview-app/app/gradle.properties
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> webview-app/app/gradle.properties

      - name: Install ImageMagick
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Download user logo
        run: curl -L "${{ inputs.logo_url }}" -o logo.png

      - name: Resize and replace launcher icon
        run: |
          mkdir -p webview-app/app/src/main/res/mipmap-xxxhdpi
          convert logo.png -resize 192x192 webview-app/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png

      - name: Set app name in strings.xml
        run: |
          sed -i "s|<string name=\"app_name\">.*</string>|<string name=\"app_name\">${{ inputs.app_name }}</string>|" webview-app/app/src/main/res/values/strings.xml

      - name: Replace site URL in strings.xml
        run: |
          sed -i "s|https://defaultsite.com|${{ inputs.site_url }}|" webview-app/app/src/main/res/values/strings.xml

      - name: Build Release APK
        working-directory: webview-app
        run: gradle assembleRelease

      - name: List APK files before upload
        run: ls -l webview-app/app/build/outputs/apk/release/

      - name: Upload Release APK to PHP server
        run: |
          curl -X POST \
            -F "apk_file=@webview-app/app/build/outputs/apk/release/app-release.apk" \
            -F "account_id=${{ inputs.account_id }}" \
            -F "app_name=${{ inputs.app_name }}" \
            https://activespreadsheet.com/upload.php
